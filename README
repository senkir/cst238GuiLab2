Travis Churchill
cst238
lab2

This lab is focused on building a clock with multiple views
Discovery:
I will have to make extensive use of the MVC pattern to swap out views and satisfy the requirements of this lab.  A clock consists of a driver for the time, On top of this the form of the clock has many attributes.  The standard seven segment display of a digital clock is repeated four times, once for each digit.  This will have to be implemented as its own class.  In addition, the actual clock controller will have to talk to a controller for the view object.  


Documentation:
Going off of the original UML diagram, I know I need to go into more detail.  For instance, the seven segment display should be broken up into components, with controllers and views for each segment, which are then controlled by the main driver for the clock type.  

Speaking of which, positioning the segments in the digital display is going to be a real pain if i do it programatically.  I'd better try to build them with a nib and IBOutlet controls.  This seems the most efficient way to get this working.  

Views are giving me trouble again.  I seem to not be able to refresh the mainMenu view like I did in the previous lab.  Somewhere along the line i think I'm setting the controllers improperly.  Hopefully this will be resolved soon.  I'm reunning out of time and I really want to at least have the digital clock working.  

The digital clock took a lot longer than i thought it would.  Views are very tempramental when it comes to swapping out their contents.  

The analog clock is theoretically going to be easier since i have all the timers wired up already.  The timeModel should technically be a singleton but I don't think i have time to add that functionality at this point.  I made several png images to use as the various features of the clock.  this seemed to make more sense than programatically drawing lines again.  

Inserting images doesn't seem too difficult, since you can add images to the bundle and then call them through [NSImage imageNamed:]

It is very important that view setup is done in the LoadView method because any links to nib objects are not made until after this method is called.  this was causing all sorts of issues when I was first rigging my controllers.  

CGAffinetransformations are insane.  The actual rotation part seems like it's doing what it's supposed to but the images aren't updating the display.  If i try to remove and re-add the subview, the image goes nowhere, which is pretty irritating.  I don't think I should have to do that since the imageView isn't changing, just the image underneath it all.  

There must be a problem with my calculations.  I should look at the value i'm passing in for my rotation angle.  
